name: CI - Test Runner

on:
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # 2. Remove existing Gradle cache to ensure a clean build
      - name: Remove current gradle cache
        run: rm -rf ~/.gradle

      # 3. Enable KVM group permissions for better emulator performance
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # 4. Setup Java Development Kit (JDK) version 17
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # 5. Setup Gradle with caching
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # 6. Cache Android Virtual Device (AVD) and ADB files
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-34-pixelxl-customsize

      # 7. Create AVD and generate snapshot for caching if cache miss occurs
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_xl  # Use a supported profile
          force-avd-creation: false
          emulator-options: >
            -no-window
            -gpu swiftshader_indirect
            -noaudio
            -no-boot-anim
            -camera-back none
          emulator-boot-timeout: 180000  # Increased boot timeout to 3 minutes
          disable-animations: false
          pre-emulator-launch-script: |
            #!/bin/bash
            CONFIG_FILE="$HOME/.android/avd/test.avd/config.ini"
            # Set larger screen resolution
            sed -i 's/^hw.lcd.width=.*/hw.lcd.width=1440/' "$CONFIG_FILE"
            sed -i 's/^hw.lcd.height=.*/hw.lcd.height=2560/' "$CONFIG_FILE"
            # Optionally, adjust screen density
            sed -i 's/^hw.lcd.density=.*/hw.lcd.density=560/' "$CONFIG_FILE"

      # 8. Decode and set up sensitive secrets
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties

      # 9. Grant execute permission to the Gradle wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 10. Check Kotlin code formatting
      - name: ktfmt Check
        run: ./gradlew ktfmtCheck

      # 11. Assemble the project and run lint checks
      - name: Assemble and Link
        run: ./gradlew assemble lint --parallel --build-cache

      # 12. Run all tests (unit and integration)
      - name: Run tests
        run: ./gradlew check --parallel --build-cache

      # 13. Run Android instrumentation tests on the emulator
      - name: Run android tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_xl  # Ensure the same profile is used
          force-avd-creation: false
          emulator-options: >
            -no-snapshot-save
            -no-window
            -gpu swiftshader_indirect
            -noaudio
            -no-boot-anim
            -camera-back none
          emulator-boot-timeout: 180000  # Increased boot timeout to 3 minutes
          disable-animations: true
          script: ./gradlew connectedCheck --parallel --build-cache

      # 14. Generate code coverage report using JaCoCo
      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      # 15. Upload coverage and analysis report to SonarCloud
      - name: Upload report to SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache