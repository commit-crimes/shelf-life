name: CI - Test Runner

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  prepare-avd:
    name: Prepare AVD
    runs-on: ubuntu-latest
    outputs:
      avd-cache-hit: ${{ steps.avd-cache.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Android SDK Components
        run: |
          yes | sdkmanager --licenses > /dev/null
          yes | sdkmanager --update > /dev/null
          sdkmanager --install "platform-tools" "emulator" "platforms;android-34" "build-tools;35.0.0" > /dev/null
        shell: bash

      - name: Set up Android SDK environment
        run: |
          echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH" >> $GITHUB_ENV
        shell: bash

      - name: AVD cache
        id: avd-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd
            ~/.android/adbkey*
          key: avd-34

      - name: Create AVD if cache miss
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "AVD created and ready for caching."

      - name: Save AVD to Cache
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd
            ~/.android/adbkey*
          key: avd-34

  ci:
    name: CI
    needs: prepare-avd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Remove current gradle cache
        run: rm -rf ~/.gradle

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Restore AVD cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd
            ~/.android/adbkey*
          key: avd-34

      - name: Install Android SDK Components
        run: |
          yes | sdkmanager --licenses > /dev/null
          yes | sdkmanager --update > /dev/null
          sdkmanager --install "platform-tools" "emulator" "platforms;android-34" "build-tools;35.0.0" > /dev/null
        shell: bash

      - name: Set up Android SDK environment
        run: |
          echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH" >> $GITHUB_ENV
        shell: bash

      - name: Setup Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true

      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: ktfmt Check
        run: ./gradlew ktfmtCheck

      - name: Assemble and Link
        run: ./gradlew assemble lint --parallel --build-cache

      - name: Run Unit Tests
        run: ./gradlew check --parallel --build-cache

      - name: Run Android Tests
        run: ./gradlew connectedCheck --parallel --build-cache

      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload Report to SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.projectKey=commit-crimes \
            -Dsonar.organization=commit-crimes \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=commit-crimes
            -Dsonar.organization=commit-crimes
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}